DOpIng
========

Project Description
-------------------------------

DOpIng is a transparent and fully automatic framework that does source-to-source transformation and runtime compilation for enhancing the vectorisation of scientific applications. The framework masquerades the overall compilation and execution through a number of aspects.
First it performs limited source-to-source, compile-time transformation to inject the code that facilitates dynamic evaluation of loops. During the dynamic evaluation, the framework delays the execution as much as possible to leverage potential runtime-only information, which are otherwise, unavailable to the compilers during static analysis.
Once the framework believes that enough information has been collected to facilitate the vectorisation, it recompiles the ideal candidates (for the time being, these are loops) and links that to the currently running code. 

Although it is possible to know more at runtime, a number of challenges do exist. First, delayed evaluation may not always pay off. After all, we may not find any candidates that massively benefits from vectorisation. Secondly, it is always a question, how much delaying is good. The aim of this framework is to facilitate the research into runtime vectorisation. 


Dependencies
--------------------------------
* llvm libclang 6.0 (add path of libclang.so to LD_LIBRARY_PATH)
* llvm 6.0 python bindings (add path to clang bindings in PYTHONPATH)


Build DOpIng (and other Makefile utilities)
--------------------------------
To build the DOpIng runtime under 'bin' directory use:
$ make

To quickly run a simple example:
$ make run

To run the tests under test directory:
$ make test

To clean binaries and temporal files for easier git commits:
$ make clean


Usage
--------------------------------
First one should specify DOPING_ROOT environment variable to point the doping folder.

Simple compiler instruction:
./dope [doping_options] -- compiler_command

Ex:
./dope -- icc test/flops/flops_serial.c -o test/flops/flops


Makefile build system:
CC="./doping [doping_options] -- icc" make
Ex:

Contributors
-------------------------------
Sergi Siso <sergi.siso@stfc.ac.uk>
Jeyan Thiyagalingam <T.Jeyarajan@liverpool.ac.uk>
